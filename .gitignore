# Byte-compiled / optimized / DLL files   ‚Üí –ë–∞–π—Ç-–∫–æ–¥ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
__pycache__/
*.py[codz]
*$py.class

# C extensions   ‚Üí –†–∞—Å—à–∏—Ä–µ–Ω–∏—è
*.so

# Distribution / packaging   ‚Üí –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ / —É–ø–∞–∫–æ–≤–∫–∞
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller   ‚Üí –ò–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä 
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs   ‚Üí –õ–æ–≥–∏ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports   ‚Üí –û—Ç—á—ë—Ç—ã —Ç–µ—Å—Ç–æ–≤ –∏ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞
htmlcov/                # HTML-–æ—Ç—á—ë—Ç—ã –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
.tox/                   # –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è tox
.nox/                   # –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è nox
.coverage               # –§–∞–π–ª—ã coverage.py
.coverage.*
.cache                  # –ö–µ—à —Ç–µ—Å—Ç–æ–≤
nosetests.xml           # –û—Ç—á—ë—Ç—ã nose
coverage.xml            # XML-–æ—Ç—á—ë—Ç—ã coverage
*.cover
*.py.cover
.hypothesis/            # –ö–µ—à hypothesis (property-based —Ç–µ—Å—Ç—ã)
.pytest_cache/          # –ö–µ—à pytest
cover/                  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è

# Translations ‚Üí –ü–µ—Ä–µ–≤–æ–¥—ã
*.mo
*.pot

# Django stuff:      ‚Üí –§–∞–π–ª—ã Django-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
*.log                  # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
local_settings.py      # –õ–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Å–µ–∫—Ä–µ—Ç—ã!)
db.sqlite3             # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö SQLite
db.sqlite3-journal     # –ñ—É—Ä–Ω–∞–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π SQLite

# Flask stuff:      ‚Üí –§–∞–π–ª—ã Flask-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
instance/              # –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∫–æ–Ω—Ñ–∏–≥–∏)
.webassets-cache       # –ö–µ—à –≤–µ–±-–∞—Å—Å–µ—Ç–æ–≤

# Scrapy stuff:      ‚Üí –§–∞–π–ª—ã Scrapy
.scrapy                # –ö–µ—à –ø–∞—Ä—Å–µ—Ä–∞ Scrapy

# Sphinx documentation      ‚Üí –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Sphinx
docs/_build/           # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

# PyBuilder      ‚Üí –°–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∫–∏ PyBuilder
.pybuilder/            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
target/                # –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–±–æ—Ä–∫–∏

# Jupyter Notebook      ‚Üí –ó–∞–º–µ—Ç–∫–∏ Jupyter
.ipynb_checkpoints     # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–ª–æ–∫–Ω–æ—Ç–æ–≤

# IPython      ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ IPython
profile_default/       # –ü—Ä–æ—Ñ–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
ipython_config.py      # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

# pyenv      ‚Üí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏ Python
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version      # –§–∞–π–ª –≤–µ—Ä—Å–∏–∏ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)

# pipenv      ‚Üí –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock          # –¢–æ—á–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g.   ‚Üí –ü–∞–∫–µ—Ç—ã PEP 582 github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/        # –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã

# Celery stuff      ‚Üí –†–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á
celerybeat-schedule      # –†–∞—Å–ø–∏—Å–∞–Ω–∏—è Celery
celerybeat.pid         # PID-—Ñ–∞–π–ª

# SageMath parsed files      ‚Üí –§–∞–π–ª—ã SageMath
*.sage.py

# Spyder project settings      ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Spyder IDE
.spyderproject
.spyproject

# Rope project settings       ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Rope IDE
.ropeproject

# mkdocs documentation      ‚Üí –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è MkDocs
/site

# mypy        ‚Üí –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker      ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ Pyre
.pyre/

# pytype static type analyzer      ‚Üí –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä pytype
.pytype/

# Cython debug symbols      ‚Üí –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Cython
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor       ‚Üí AI-—Ä–µ–¥–∞–∫—Ç–æ—Ä
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore          # –§–∞–π–ª—ã –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è AI
.cursorindexingignore  # –§–∞–π–ª—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏

# Marimo      ‚Üí –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ Python-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
marimo/_static/        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
marimo/_lsp/           # LSP-—Å–µ—Ä–≤–µ—Ä
__marimo__/            # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ

### üîê SATTVA AI DEV SECURE ZONE ###

# üõ°Ô∏è –°–ï–ö–†–ï–¢–ù–´–ï –ê–õ–ì–û–†–ò–¢–ú–´ –ò –ü–ê–¢–ï–ù–¢–´
/private/              # –ü–∞–ø–∫–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞–º–∏
algorithms/            # –ö–∞—Ç–∞–ª–æ–≥ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
*.secret               # –§–∞–π–ª—ã —Å –ø–æ–º–µ—Ç–∫–æ–π "—Å–µ–∫—Ä–µ—Ç–Ω–æ"
secret_*.py            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
patents/               # –ö–∞—Ç–∞–ª–æ–≥ –ø–∞—Ç–µ–Ω—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
*.patent               # –ü–∞—Ç–µ–Ω—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
rosptent_application.pdf  # –ó–∞—è–≤–∫–∞ –≤ –†–æ—Å–ø–∞—Ç–µ–Ω—Ç

# üîë –ö–õ–Æ–ß–ò –î–û–°–¢–£–ü–ê –ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø 
.env                   # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
.env.*                 # –í—Å–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
.envrc                 # –ö–æ–Ω—Ñ–∏–≥ direnv
config.ini             # –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
api_keys.json          # –§–∞–π–ª API-–∫–ª—é—á–µ–π
credentials/           # –£—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
keys/                  # –ö–∞—Ç–∞–ª–æ–≥ –∫–ª—é—á–µ–π
*.key                  # –ö–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞
*.pem                  # –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
*.cert                 # SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
*.jks                  # Java KeyStore
*.keystore             # –•—Ä–∞–Ω–∏–ª–∏—â–∞ –∫–ª—é—á–µ–π
api_keys.json

# üß© –í–ò–†–¢–£–ê–õ–¨–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø –ò –ö–û–ú–ü–ò–õ–Ø–¶–ò–Ø  ‚Üí Environments 
.venv                  # –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
env/                   # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
venv/                  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
ENV/                   # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
env.bak/               # –ë—ç–∫–∞–ø—ã –æ–∫—Ä—É–∂–µ–Ω–∏–π
venv.bak/              # –ë—ç–∫–∞–ø—ã –æ–∫—Ä—É–∂–µ–Ω–∏–π
*.dll                  # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (Windows)
compiled/              # –ü–∞–ø–∫–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏

# üö® –°–ò–°–¢–ï–ú–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
security_alerts.log    # –õ–æ–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
license_checker/       # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–π
access_control/        # –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞
audit_trail/           # –ñ—É—Ä–Ω–∞–ª –∞—É–¥–∏—Ç–∞
security/__init__.py   # –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞—â–∏—Ç—ã
/private/              # –ó–∞—â–∏—Ç–∞ –ø–∞–ø–∫–∏ —Å –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏
*.pyd                  # –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ Windows
__pycache__/private/   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∫–µ—à–∞ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
dist/private/          # –ó–∞—â–∏—Ç–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤

# üë§ –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô (GDPR/152-–§–ó)
user_profiles/         # –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data/             # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
*.personal_data        # –§–∞–π–ª—ã —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
auth_tokens.db         # –¢–æ–∫–µ–Ω—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
*.csv                  # –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV
*.xlsx                 # Excel-—Ñ–∞–π–ª—ã
*.parquet              # –§–æ—Ä–º–∞—Ç Parquet
calculations_database.db  # –ë–∞–∑–∞ —Ä–∞—Å—á—ë—Ç–æ–≤
migrations/            # –ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
*.db-journal           # –ñ—É—Ä–Ω–∞–ª—ã –ë–î

# üíæ –†–ï–ó–ï–†–í–ù–´–ï –ö–û–ü–ò–ò –ò –ê–†–•–ò–í–´
*.bak                  # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
*.tmp                  # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
*.backup               # –ë—ç–∫–∞–ø—ã
archive/               # –ê—Ä—Ö–∏–≤—ã
temp_backups/          # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã

# ‚öôÔ∏è –°–õ–£–ñ–ï–ë–ù–´–ï –§–ê–ô–õ–´ –†–ê–ó–†–ê–ë–û–¢–ö–ò
*.code-workspace       # –†–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ VSCode
.vscode/launch.json    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
.vscode/settings.json  # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ VSCode
.idea/workspace.xml    # –ö–æ–Ω—Ñ–∏–≥ JetBrains IDE
.idea/dataSources/     # –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö

### üîê SATTVA AI DEV SECURE ZONE [–ö–û–ù–ï–¶] ###

# –ê–ë–°–û–õ–Æ–¢–ù–û –í–°–ï–ì–î–ê –ò–ì–ù–û–†–ò–†–û–í–ê–¢–¨
.DS_Store               # –°–ª—É–∂–µ–±–Ω—ã–π —Ñ–∞–π–ª macOS
Thumbs.db               # –ö–µ—à —ç—Å–∫–∏–∑–æ–≤ Windows
desktop.ini             # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–ø–æ–∫ Windows

# –ö–†–ò–¢–ò–ß–ù–û –î–õ–Ø WINDOWS
*.lnk
*.tmp
