import os     # –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ python create_folders.py
import yaml

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ project_structure.yaml
with open("project_structure.yaml", "r", encoding="utf-8") as f:
    structure = yaml.safe_load(f)

def create_folder(path, description=None):
    """
    –°–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫—É —Å README.md –∏ .gitkeep (–µ—Å–ª–∏ –ø—É—Å—Ç–∞—è).
    """
    os.makedirs(path, exist_ok=True)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–ª–∞–¥—ë–º README.md
    if description:
        readme_path = os.path.join(path, "README.md")
        if not os.path.exists(readme_path):
            with open(readme_path, "w", encoding="utf-8") as f:
                f.write(f"# {os.path.basename(path)}\n\n{description}\n")

    # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞ (—Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —Ç–æ–ª—å–∫–æ README), –¥–æ–±–∞–≤–ª—è–µ–º .gitkeep
    if len(os.listdir(path)) == 0 or os.listdir(path) == ["README.md"]:
        gitkeep_path = os.path.join(path, ".gitkeep")
        if not os.path.exists(gitkeep_path):
            with open(gitkeep_path, "w", encoding="utf-8") as f:
                f.write("# keep folder\n")

def process_structure(base_path, items):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫–∏ –∏–∑ YAML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
    """
    for key, value in items.items():
        current_path = os.path.join(base_path, key)

        if isinstance(value, list):
            # –í–µ—Ç–∫–∞ —Å –ø–æ–¥–ø–∞–ø–∫–∞–º–∏
            create_folder(current_path)
            for sub in value:
                if isinstance(sub, dict):
                    for sub_key, sub_desc in sub.items():
                        sub_path = os.path.join(current_path, sub_key)
                        create_folder(sub_path, sub_desc)
                else:
                    sub_path = os.path.join(current_path, sub)
                    create_folder(sub_path)
        elif isinstance(value, dict):
            # –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            create_folder(current_path)
            process_structure(current_path, value)
        else:
            # –û–±—ã—á–Ω–∞—è –ø–∞–ø–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
            create_folder(current_path, str(value))

def generate_readme_structure(items, indent=0):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è README_STRUCTURE.md –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞.
    """
    lines = []
    for key, value in items.items():
        lines.append("  " * indent + f"- **{key}/**")
        if isinstance(value, list):
            for sub in value:
                if isinstance(sub, dict):
                    for sub_key, sub_desc in sub.items():
                        lines.append("  " * (indent + 1) + f"- {sub_key}/ ‚Äî {sub_desc}")
                else:
                    lines.append("  " * (indent + 1) + f"- {sub}/")
        elif isinstance(value, dict):
            lines.extend(generate_readme_structure(value, indent + 1))
        else:
            lines.append("  " * (indent + 1) + f"- {value}")
    return lines

# –ó–∞–ø—É—Å–∫
if "folders" in structure:
    process_structure(".", structure["folders"])

    readme_lines = ["# üìÇ Project Structure\n"]
    readme_lines.extend(generate_readme_structure(structure["folders"]))
    with open("README_STRUCTURE.md", "w", encoding="utf-8") as f:
        f.write("\n".join(readme_lines))

    print("‚úÖ –ü–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã, README.md –∏ .gitkeep –¥–æ–±–∞–≤–ª–µ–Ω—ã, README_STRUCTURE.md –æ–±–Ω–æ–≤–ª—ë–Ω.")
else:
    print("‚ùå –í project_structure.yaml –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ 'folders'")